{"version":3,"file":"main.js","sources":["../../frontend/ts/animations.ts"],"sourcesContent":["const animateUp: NodeListOf<HTMLElement> = document.querySelectorAll('.__animateup');\r\nconst animateDown: NodeListOf<HTMLElement> = document.querySelectorAll('.__animatedown');\r\nconst animationsXAxis: NodeListOf<HTMLElement> = document.querySelectorAll('.__animateleft, .__animateright');\r\n\r\nconst setObserver = (elements: NodeListOf<Element> | HTMLElement[], offset: number) => {\r\n    const options: IntersectionObserverInit = {\r\n        root: null,\r\n        rootMargin: `${offset}px`,\r\n        threshold: 0,\r\n    };\r\n\r\n    const callback: IntersectionObserverCallback = (entries, observer) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                const targetElement = entry.target as HTMLElement; // Type-cast to HTMLElement\r\n                targetElement.classList.add('__animate');\r\n                observer.unobserve(targetElement);\r\n            }\r\n        });\r\n    };\r\n\r\n    const animationObserver = new IntersectionObserver(callback, options);\r\n\r\n    elements.forEach(e => {\r\n        animationObserver.observe(e);\r\n    });\r\n};\r\n\r\n// Set observers directly\r\nsetObserver(animationsXAxis, 0);\r\nsetObserver(animateUp, 0);\r\nsetObserver(animateDown, 100);\r\n"],"names":["animateUp","animateDown","animationsXAxis","setObserver","elements","offset","options","callback","entries","observer","entry","targetElement","animationObserver"],"mappings":"AAAA,MAAMA,EAAqC,SAAS,iBAAiB,cAAc,EAC7EC,EAAuC,SAAS,iBAAiB,gBAAgB,EACjFC,EAA2C,SAAS,iBAAiB,iCAAiC,EAEtGC,EAAc,CAACC,EAA+CC,IAAmB,CACnF,MAAMC,EAAoC,CACtC,KAAM,KACN,WAAY,GAAGD,CAAM,KACrB,UAAW,CAAA,EAGTE,EAAyC,CAACC,EAASC,IAAa,CAClED,EAAQ,QAAiBE,GAAA,CACrB,GAAIA,EAAM,eAAgB,CACtB,MAAMC,EAAgBD,EAAM,OACdC,EAAA,UAAU,IAAI,WAAW,EACvCF,EAAS,UAAUE,CAAa,CACpC,CAAA,CACH,CAAA,EAGCC,EAAoB,IAAI,qBAAqBL,EAAUD,CAAO,EAEpEF,EAAS,QAAa,GAAA,CAClBQ,EAAkB,QAAQ,CAAC,CAAA,CAC9B,CACL,EAGAT,EAAYD,EAAiB,CAAC,EAC9BC,EAAYH,EAAW,CAAC,EACxBG,EAAYF,EAAa,GAAG"}